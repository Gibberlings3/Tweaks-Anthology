/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////                                                            \\\\\
///// Make certain creatures immune to backstab / sneak attack   \\\\\
/////                                                            \\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\



/////////////////////////////////////////////////////////////////
/*

Auxiliary function

*/
//////////////////////////////////////////////////////////////////

DEFINE_PATCH_FUNCTION "BACKSTAB_IMMUNITY_HELPER"
BEGIN
  // Initialize
  SET "found" = 0
  READ_LONG offset_item_slot off_slots
  READ_LONG offset_item_list off_items
  READ_LONG offset_item_num  num_items
  PATCH_IF offset_general = 0x271 BEGIN // cre v1 (bg2/ee)
    READ_BYTE 0x33 fx_type
  END ELSE BEGIN
    SET fx_type = 0
  END
  FOR (index = 0 ; index < item_slot_cloak ; ++index) BEGIN
    PATCH_IF index > item_slot_cont BEGIN SET index = item_slot_cloak END // skip over quivers
    READ_SHORT (off_slots + (index * 0x02)) item_idx
    PATCH_IF item_idx < num_items BEGIN // sanity check
      READ_ASCII (off_items + (0x14 * item_idx)) "itm_resref"
      PATCH_PHP_EACH cd_backstab_items AS itm_check => foo BEGIN
        PATCH_IF ("%itm_resref%" STRING_COMPARE_CASE "%itm_check%" = 0) BEGIN
          SET found = 1
          SET index = item_slot_cloak // kill loop
        END
      END
    END
  END
  // Check if the immunity is already present amongst its effects
  PATCH_IF !found BEGIN
    READ_LONG offset_fx fx_off
    READ_LONG offset_fx_num fx_num
    FOR (index = 0 ; index < fx_num ; ++index) BEGIN
      READ_SHORT (fx_off        + (0x08 * fx_type) + (index * (0x30 + (0xd8 * fx_type)))) opcode
      READ_LONG  (fx_off + 0x08 + (0x10 * fx_type) + (index * (0x30 + (0xd8 * fx_type)))) param2
      PATCH_IF ((opcode = backstab_op) AND ((!param2_check) OR ((param2_check = 1) AND (param2 != 0)))) BEGIN
        SET found = 1
        SET index = fx_num // kill loop
      END
    END
  END
  PATCH_IF !found BEGIN
//    PATCH_PRINT ~  == adding backstab immunity to %SOURCE_RES%~
    INSERT_BYTES  (fx_off) (0x30 + (0xd8 * fx_type))
      WRITE_SHORT (fx_off        + (0x08 * fx_type)) backstab_op // opcode
      WRITE_BYTE  (fx_off + 0x02 + (0x0a * fx_type)) 1 // target
      WRITE_BYTE  (fx_off + 0x0c + (0x10 * fx_type)) 9 // timing
    PATCH_IF param2_check BEGIN
      WRITE_LONG  (fx_off + 0x08 + (0x10 * fx_type)) 1 // parameter2
    END
    WRITE_LONG offset_fx_num (THIS + 1)
    PATCH_IF offset_general = 0x271 BEGIN // cre v1 (bg2/ee)
      PATCH_FOR_EACH offset IN 0x2a8 0x2b0 0x2b8 0x2bc 0x2c0 BEGIN
        READ_LONG offset off_check
        PATCH_IF off_check >= fx_off BEGIN
          WRITE_LONG offset (THIS + (0x30 + (0xd8 * fx_type)))
        END
      END
    END
    PATCH_IF offset_general = 0x2d9 BEGIN // cre v9 (iwd)
      PATCH_FOR_EACH offset IN 0x308 0x310 0x318 0x320 0x324 BEGIN
        READ_LONG offset off_check
        PATCH_IF off_check >= fx_off BEGIN
          WRITE_LONG offset (THIS + (0x30 + (0xd8 * fx_type)))
        END
      END
    END
    PATCH_IF offset_general = 0x385 BEGIN // cre v2.2 (iwd2)
      PATCH_FOR_EACH offset IN 0x5fa 0x602 0x60a 0x612 0x616 BEGIN // abil, song, shape, item slos, items
        READ_LONG offset off_check
        PATCH_IF off_check >= fx_off BEGIN
          WRITE_LONG offset (THIS + (0x30 + (0xd8 * fx_type)))
        END
      END
      FOR (offset = 0x3ba ; offset < 0x5d3 ; offset = offset + 0x04) BEGIN // loop through spell offsets
        PATCH_IF offset = 0x4b6 BEGIN SET offset = 0x5b2 END // skip from wizard offsets to domain
        READ_LONG offset off_check
        PATCH_IF off_check >= fx_off BEGIN
          WRITE_LONG offset (THIS + (0x30 + (0xd8 * fx_type)))
        END
      END
    END
  END
END

//DEFINE_ACTION_FUNCTION "BACKSTAB_IMMUNITY"
//BEGIN
ACTION_IF !(MOD_IS_INSTALLED ~EEex.tp2~ 0) BEGIN
  WITH_SCOPE BEGIN

    ACTION_FOR_EACH entry IN undead plant weapon BEGIN
      OUTER_SET ~general_%entry%~ = IDS_OF_SYMBOL ("GENERAL" "%entry%")
    END

    ACTION_FOR_EACH entry IN slime beholder demonic mephit imp dragon elemental salamander mist solar antisolar planatar darkplanatar golem shambling_mound drake tanari BEGIN
      OUTER_SET ~race_%entry%~ = IDS_OF_SYMBOL ("RACE" "%entry%")
    END

    ACTION_FOR_EACH entry IN golem_flesh BEGIN
      OUTER_SET ~class_%entry%~ = IDS_OF_SYMBOL ("CLASS" "%entry%")
    END

    OUTER_SET backstab_op = 292
    OUTER_SET offset_general = 0x271 // cre v1 (bg2/ee)
    OUTER_SET offset_item_slot = 0x2b8 // cre v1 (bg2/ee)
    OUTER_SET offset_fx = 0x2c4 // cre v1 (bg2/ee)
    OUTER_SET item_slot_cont = 13 // go from 0 to this number for equipped items
    OUTER_SET item_slot_cloak = 17 // plus the cloak
    OUTER_SET param2_check = 1

    ACTION_IF game_is_iwd2 OR original_iwd BEGIN
      OUTER_SET backstab_op = 287
      OUTER_SET param2_check = 0
      ACTION_IF game_is_iwd2 BEGIN
        OUTER_SET offset_general = 0x385 // cre v2.2 (iwd2)
        OUTER_SET offset_item_slot = 0x612 // cre v2.2 (iwd2)
        OUTER_SET offset_fx = 0x61e // cre v2.2 (iwd2)
        OUTER_SET item_slot_cont = 17 // go from 0 to this number for equipped items
        OUTER_SET item_slot_cloak = 22 // plus the cloak
      END ELSE BEGIN
        OUTER_SET offset_general = 0x2d9 // cre v9 (iwd)
        OUTER_SET offset_item_slot = 0x320 //  cre v9 (iwd)
        OUTER_SET offset_fx = 0x32c // cre v9 (iwd)
      END
    END
    OUTER_SET offset_race  = offset_general + 1
    OUTER_SET offset_class = offset_general + 2
    OUTER_SET offset_item_list = offset_item_slot + 0x04
    OUTER_SET offset_item_num  = offset_item_slot + 0x08
    OUTER_SET offset_fx_num = offset_fx + 0x04

    COPY_EXISTING_REGEXP ~^.+\.itm$~ ~override~ // luckily the same code works for v2 (iwd2) and v1 (all others)
      READ_LONG  0x6a fx_off
      READ_SHORT 0x6e fx_idx
      READ_SHORT 0x70 fx_num
      FOR (index = fx_idx ; index < fx_num; ++index) BEGIN
        READ_SHORT (fx_off + 0x00 + (index * 0x30)) opcode
        READ_LONG  (fx_off + 0x08 + (index * 0x30)) param2
        PATCH_IF ((opcode = backstab_op) AND ((!param2_check) OR ((param2_check = 1) AND (param2 != 0)))) BEGIN
          DEFINE_ASSOCIATIVE_ARRAY cd_backstab_items BEGIN ~%SOURCE_RES%~ => 1 END
          SET index = fx_num // kill loop
        END
      END
      BUT_ONLY

    COPY_EXISTING_REGEXP "^.+\.cre$" "override"
      SET "found" = 0
      PATCH_MATCH BYTE_AT offset_general WITH // GENERAL check
        general_undead
        general_plant
        general_weapon
        BEGIN
          SET "found" = 1
          LPF "BACKSTAB_IMMUNITY_HELPER" END
        END
        DEFAULT
      END
      PATCH_IF !("%found%") BEGIN
        PATCH_MATCH BYTE_AT offset_race WITH // RACE check
          race_slime
          race_beholder
          race_demonic
          race_mephit
          race_imp
          race_dragon
          race_elemental
          race_salamander
          race_mist
          race_solar
          race_antisolar
          race_planatar
          race_darkplanatar
          race_shambling_mound
          race_drake
          race_tanari
          BEGIN
            LPF "BACKSTAB_IMMUNITY_HELPER" END
          END
          race_golem
          BEGIN
            PATCH_IF game_is_iwd2 BEGIN
              READ_LONG 0x08 name_str
              PATCH_IF ((name_str != 13834) AND    // iwd2 has no easy way to discern flesh golems from others, so use explicit name checks
                        (name_str != 34849)) BEGIN // 13834 is "flesh golem", 34849 is "enhanced flesh golem"
                LPF "BACKSTAB_IMMUNITY_HELPER" END
              END
            END ELSE BEGIN
              PATCH_IF BYTE_AT offset_class != class_golem_flesh BEGIN
                LPF "BACKSTAB_IMMUNITY_HELPER" END
              END
            END
          END
          DEFAULT
        END
      END
    BUT_ONLY_IF_IT_CHANGES
  END
END ELSE BEGIN
  WITH_SCOPE BEGIN
    INCLUDE "cdtweaks\luke\lib\install.tph"
    //
    LAF "APPEND_LUA_CHUNK" STR_VAR "description" = "Rule Changes" "sourceFileSpec" = "cdtweaks\luke\lua\rule_changes\revised_backstab_immunity.lua" "destRes" = "m_gtrule" END
    //
    ACTION_IF !(FILE_EXISTS_IN_GAME "m_gttbls.lua") BEGIN
      COPY "cdtweaks\luke\lib\resource\tables.lua" "override"
    END
  END
END
